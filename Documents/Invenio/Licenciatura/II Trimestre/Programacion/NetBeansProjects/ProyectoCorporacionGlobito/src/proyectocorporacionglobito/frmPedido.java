/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectocorporacionglobito;

import java.awt.print.PrinterException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import logica.Global;
import logica.Pedido;
import logica.Perfume;
import logica.Vendedora;
import org.jvnet.substance.SubstanceLookAndFeel;
import org.jvnet.substance.utils.SubstanceConstants;

/**
 *
 * @author Gloriana
 */
public class frmPedido extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmPedido
     */
    public frmPedido() {
        initComponents();
        btnAceptar.putClientProperty(SubstanceLookAndFeel.BUTTON_SIDE_PROPERTY, SubstanceConstants.Side.RIGHT);
        btnCancelar.putClientProperty(SubstanceLookAndFeel.BUTTON_SIDE_PROPERTY, SubstanceConstants.Side.LEFT);
        getRootPane().setDefaultButton(btnAceptar);
        imprimirEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        winPedido = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtVendedora = new javax.swing.JTextField();
        txtPerfume = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        lblPerfume = new javax.swing.JLabel();
        lblVendedora = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        btnGuadar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCalculadora = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedido = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        lblTotalCantidad = new javax.swing.JLabel();
        lblTotalPrecio = new javax.swing.JLabel();

        winPedido.setTitle("Guardar");
        winPedido.setAlwaysOnTop(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Vendedora:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Cantidad:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Perfume:");

        lblPerfume.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        lblVendedora.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVendedora, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVendedora, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPerfume, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPerfume, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblPerfume, lblVendedora, txtCantidad, txtPerfume, txtVendedora});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVendedora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 0, 0)
                .addComponent(lblVendedora, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtPerfume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(lblPerfume, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblPerfume, lblVendedora, txtCantidad, txtPerfume, txtVendedora});

        btnAceptar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout winPedidoLayout = new javax.swing.GroupLayout(winPedido.getContentPane());
        winPedido.getContentPane().setLayout(winPedidoLayout);
        winPedidoLayout.setHorizontalGroup(
            winPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, winPedidoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(winPedidoLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        winPedidoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAceptar, btnCancelar});

        winPedidoLayout.setVerticalGroup(
            winPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(winPedidoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(winPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        winPedidoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAceptar, btnCancelar});

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pedidos");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/verification5.png"))); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnGuadar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/floppy18.png"))); // NOI18N
        btnGuadar.setText("Guardar");
        btnGuadar.setFocusable(false);
        btnGuadar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuadar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuadar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuadarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuadar);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/drawing4.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancel3.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setFocusable(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        btnCalculadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/calc.png"))); // NOI18N
        btnCalculadora.setText("Calculadora");
        btnCalculadora.setFocusable(false);
        btnCalculadora.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCalculadora.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculadoraActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCalculadora);

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refresh.png"))); // NOI18N
        btnActualizar.setText("Refrescar");
        btnActualizar.setFocusable(false);
        btnActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnActualizar);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronic1.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setFocusable(false);
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimir);

        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendedora", "Perfume", "Cantidad", "Precio", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblPedido);

        jLabel9.setText("Totales");

        lblTotalCantidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTotalPrecio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel9)
                .addGap(27, 27, 27)
                .addComponent(lblTotalCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTotalPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lblTotalCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuadarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuadarActionPerformed
        winPedido.setSize(375, 300);
        winPedido.setLocationRelativeTo(tblPedido);
        winPedido.setTitle("Guardar");
        ImageIcon img;
        img = new ImageIcon(getClass().getResource("/Imagenes/floppy18.png"));
        winPedido.setIconImage(img.getImage());
        winPedido.setVisible(true);
        limpiarCampos();
        txtVendedora.setEnabled(true);
        txtPerfume.setEnabled(true);
        txtVendedora.requestFocus();
    }//GEN-LAST:event_btnGuadarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int fila = tblPedido.getSelectedRow();
        if (fila != -1) {
            txtVendedora.setEnabled(false);
            txtPerfume.setEnabled(false);
            txtVendedora.setText(tblPedido.getValueAt(fila, 0).toString());
            txtPerfume.setText(tblPedido.getValueAt(fila, 1).toString());
            txtCantidad.setText(tblPedido.getValueAt(fila, 2).toString());
            winPedido.setSize(375, 300);
            winPedido.setLocationRelativeTo(tblPedido);
            winPedido.setTitle("Editar");
            ImageIcon img;
            img = new ImageIcon(getClass().getResource("/Imagenes/drawing4.png"));
            winPedido.setIconImage(img.getImage());
            winPedido.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione la fila a editar", "Editar",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filas[] = tblPedido.getSelectedRows();
        if (filas.length != -1) {
            int resp = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de eliminar el registro seleccioando?",
                    "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resp == JOptionPane.YES_OPTION) {
                for (int i = 0; i < filas.length; i++) {
                    Global.listaPerfume.devolverPerfumes(
                            Integer.parseInt(tblPedido.getValueAt(filas[i], 1).toString()),
                            Integer.parseInt(tblPedido.getValueAt(filas[i], 2).toString()));
                    Global.listaPedido.quitarPedido(
                            Integer.parseInt(tblPedido.getValueAt(filas[i], 0).toString()),
                            Integer.parseInt(tblPedido.getValueAt(filas[i], 1).toString()));
                }
                imprimirEnTabla();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione la fila a eliminar", "Eliminar",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculadoraActionPerformed
        try {
            Runtime rt = Runtime.getRuntime();
            Process p = rt.exec("calc");
            p.waitFor();
        } catch (IOException | InterruptedException ex) {
            Logger.getLogger(frmPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCalculadoraActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        try {
            tblPedido.print();//envia los datos de la tabla a la impresora
        } catch (PrinterException ex) {
            Logger.getLogger(frmPerfume.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Pedido pedido;
        String errores = validarDatos();
        if (errores.equals("")) {
            pedido = new Pedido();
            pedido.setVendedora(Integer.parseInt(txtVendedora.getText()));
            pedido.setPerfume(Integer.parseInt(txtPerfume.getText()));
            pedido.setCantidad(Integer.parseInt(txtCantidad.getText()));
            if (winPedido.getTitle().equals("Guardar")) {
                if (!Global.listaPedido.existePedido(pedido.getVendedora(), pedido.getPerfume())) {
                    Perfume perfume = Global.listaPerfume.buscarPerfume(Integer.parseInt(txtPerfume.getText()));
                    if (perfume.getCantidad() < Integer.parseInt(txtCantidad.getText())) {
                        JOptionPane.showMessageDialog(winPedido, "Cantidad insuficiente en inventario.\n"
                                + "Solo se cuenta con " + perfume.getCantidad() + " unidades.", "Pedido", JOptionPane.ERROR_MESSAGE);

                    } else {
                        pedido.setPrecio(perfume.getPrecio());
                        pedido.setTotal(pedido.getCantidad() * perfume.getPrecio());
                        perfume.setCantidad(perfume.getCantidad() - pedido.getCantidad());
                        Global.listaPedido.agregarPedido(pedido);
                        Global.listaPerfume.editarPerfume(perfume);
                        Global.listaPedido.escribirPedidos();
                        Global.listaPerfume.escribirPerfumes();
                        JOptionPane.showMessageDialog(winPedido, "Pedido registrado exitosamente");
                        imprimirEnTabla();
                        winPedido.dispose();
                    }
                } else {
                    try {
                        int resp = JOptionPane.showConfirmDialog(winPedido, "El pedido ya existe desea incrementar la cantidad pedida",
                                "Pedido", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (resp == JOptionPane.YES_OPTION) {
                            pedido = Global.listaPedido.buscarPedido(pedido.getVendedora(), pedido.getPerfume());
                            int cantidad = Integer.parseInt(JOptionPane.showInputDialog(winPedido, "Digite la cantidad a solicitar", "Incrementar pedido",
                                    JOptionPane.QUESTION_MESSAGE));
                            Perfume perfume = Global.listaPerfume.buscarPerfume(Integer.parseInt(txtPerfume.getText()));
                            if (perfume.getCantidad() < cantidad) {
                                JOptionPane.showMessageDialog(winPedido, "Cantidad insuficiente en inventario.\n"
                                        + "Solo se cuenta con " + perfume.getCantidad() + " unidades.", "Pedido", JOptionPane.ERROR_MESSAGE);

                            } else {
                                pedido.setCantidad(pedido.getCantidad() + cantidad);
                                pedido.setTotal(pedido.getCantidad() * perfume.getPrecio());
                                perfume.setCantidad(perfume.getCantidad() - cantidad);
                                Global.listaPedido.editarPedido(pedido);
                                Global.listaPerfume.editarPerfume(perfume);
                                Global.listaPedido.escribirPedidos();
                                Global.listaPerfume.escribirPerfumes();
                                JOptionPane.showMessageDialog(winPedido, "Pedido actualizado correctamente");
                                imprimirEnTabla();
                                winPedido.dispose();
                            }
                        }
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(winPedido, "Error el el formato de los datos", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {//Desea editar ya sea menos o mas perfumes
                pedido = Global.listaPedido.buscarPedido(pedido.getVendedora(), pedido.getPerfume());
                Perfume perfume = Global.listaPerfume.buscarPerfume(pedido.getPerfume());
                int cantidad = Integer.parseInt(txtCantidad.getText());

                if (pedido.getCantidad() > cantidad) {//Estoy devolviendo producto
                    perfume.setCantidad(perfume.getCantidad() + (pedido.getCantidad() - cantidad));
                    int cantidadMenos = pedido.getCantidad() - cantidad;
                    pedido.setCantidad(cantidad);
                    Global.listaPerfume.editarPerfume(perfume);
                    Global.listaPedido.editarPedido(pedido);
                    Global.listaPerfume.escribirPerfumes();
                    Global.listaPedido.escribirPedidos();
                    imprimirEnTabla();
                    winPedido.dispose();
                    JOptionPane.showMessageDialog(winPedido, "Se devolvieron al inventario "+(cantidadMenos)+" perfumes "+perfume.getNombre());
                } else if (pedido.getCantidad() < cantidad) {//Estoy adquiriendo mas producto
                    if (perfume.getCantidad() < (cantidad - pedido.getCantidad())) {
                        JOptionPane.showMessageDialog(winPedido, "Cantidad insuficiente en inventario.\n"
                                + "Solo se cuenta con " + perfume.getCantidad() + " unidades.", "Pedido", JOptionPane.ERROR_MESSAGE);

                    } else {
                        perfume.setCantidad(perfume.getCantidad() - (cantidad - pedido.getCantidad()));
                        int cantidadMas = cantidad-pedido.getCantidad();
                        pedido.setCantidad(cantidad);
                        Global.listaPerfume.editarPerfume(perfume);
                        Global.listaPedido.editarPedido(pedido);
                        Global.listaPerfume.escribirPerfumes();
                        Global.listaPedido.escribirPedidos();
                        imprimirEnTabla();
                        winPedido.dispose();
                        JOptionPane.showMessageDialog(winPedido, "Se adquieron del inventario "+(cantidadMas
                                )+" unidades mas del perfume "+perfume.getNombre());
                    }

                } else {
                    JOptionPane.showMessageDialog(winPedido, "No esta modificando la cantidad a comprar");
                }

            }
        } else {
            JOptionPane.showMessageDialog(winPedido, errores, "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        winPedido.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        imprimirEnTabla();
    }//GEN-LAST:event_btnActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCalculadora;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuadar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblPerfume;
    private javax.swing.JLabel lblTotalCantidad;
    private javax.swing.JLabel lblTotalPrecio;
    private javax.swing.JLabel lblVendedora;
    private javax.swing.JTable tblPedido;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtPerfume;
    private javax.swing.JTextField txtVendedora;
    private javax.swing.JDialog winPedido;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        txtVendedora.setText("");
        txtCantidad.setText("");
        txtPerfume.setText("");
        lblPerfume.setText("");
        lblVendedora.setText("");
        int total[] = Global.listaPedido.obtenerTotales();
        lblTotalCantidad.setText("" + total[0]);
        lblTotalPrecio.setText("" + total[1]);
    }

    private String validarDatos() {
        String msg = "";
        if (txtVendedora.getText().equals("")) {
            msg = "Por favor ingrese el id de la vendedora";
            txtVendedora.requestFocus();
            return msg;
        } else {
            try {
                Integer.parseInt(txtVendedora.getText());
                Vendedora vendedora = Global.listaVendedora.buscarVendedora(Integer.parseInt(txtVendedora.getText()));
                if (vendedora == null) {
                    msg = "Id Vendedora no existe, no se puede registrar el pedido";
                    return msg;
                } else {
                    lblVendedora.setText(vendedora.getNombre());
                }
            } catch (NumberFormatException e) {
                msg = "Solo se aceptan numeros en id de la vendedora";
                txtVendedora.requestFocus();
                return msg;
            }
        }
        if (txtPerfume.getText().equals("")) {
            msg = "Por favor ingrese el id del perfume";
            txtPerfume.requestFocus();
            return msg;
        } else {
            try {
                Integer.parseInt(txtPerfume.getText());
                Perfume perfume = Global.listaPerfume.buscarPerfume(Integer.parseInt(txtPerfume.getText()));
                if (perfume == null) {
                    msg = "Id Perfume no existe, no se puede registrar el pedido";
                    return msg;
                } else {
                    lblPerfume.setText(perfume.getNombre());
                }
            } catch (NumberFormatException e) {
                msg = "Solo se aceptan numeros en id del perfume";
                txtPerfume.requestFocus();
                return msg;
            }
        }
        if (txtCantidad.getText().equals("")) {
            msg = "Por favor ingrese la cantidad";
            txtCantidad.requestFocus();
            return msg;
        } else {
            try {
                Integer.parseInt(txtCantidad.getText());
            } catch (NumberFormatException e) {
                msg = "Solo se aceptan numeros en la cantidad";
                txtCantidad.requestFocus();
                return msg;
            }
        }
        return msg;
    }

    private void imprimirEnTabla() {
        tblPedido.setModel(Global.listaPedido.imprimirTabla());
        int total[] = Global.listaPedido.obtenerTotales();
        lblTotalCantidad.setText("" + total[0]);
        lblTotalPrecio.setText("" + total[1]);
    }
}
